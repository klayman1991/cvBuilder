// <auto-generated />
using CvNetCore2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CvNetCore2.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    partial class AplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CvNetCore2.Models.About", b =>
                {
                    b.Property<int>("AboutID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AboutText");

                    b.Property<int?>("UserDetailsID");

                    b.HasKey("AboutID");

                    b.HasIndex("UserDetailsID");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("CvNetCore2.Models.Courses", b =>
                {
                    b.Property<int>("CoursesID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CoursesDescription");

                    b.Property<string>("CoursesName");

                    b.Property<string>("EndDate");

                    b.Property<string>("StartDate");

                    b.Property<int?>("UserDetailsID");

                    b.HasKey("CoursesID");

                    b.HasIndex("UserDetailsID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CvNetCore2.Models.Hobby", b =>
                {
                    b.Property<int>("HobbyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HobbyText");

                    b.Property<int?>("UserDetailsID");

                    b.HasKey("HobbyID");

                    b.HasIndex("UserDetailsID");

                    b.ToTable("Hobbies");
                });

            modelBuilder.Entity("CvNetCore2.Models.Language", b =>
                {
                    b.Property<int>("LanguageID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LanguageDescription");

                    b.Property<int>("LanguageLevel");

                    b.Property<string>("LanguageName");

                    b.Property<int?>("UserDetailsID");

                    b.HasKey("LanguageID");

                    b.HasIndex("UserDetailsID");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("CvNetCore2.Models.Skills", b =>
                {
                    b.Property<int>("SkillsID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("SkillDescription");

                    b.Property<int>("SkillLevel");

                    b.Property<string>("SkillName");

                    b.Property<int?>("UserDetailsID");

                    b.HasKey("SkillsID");

                    b.HasIndex("UserDetailsID");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("CvNetCore2.Models.UserAdress", b =>
                {
                    b.Property<int>("UserAdressID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Line1")
                        .IsRequired();

                    b.Property<string>("Line2");

                    b.Property<string>("Line3");

                    b.Property<string>("Postcode")
                        .IsRequired();

                    b.Property<int?>("UserDetailsID");

                    b.HasKey("UserAdressID");

                    b.HasIndex("UserDetailsID");

                    b.ToTable("UserAdress");
                });

            modelBuilder.Entity("CvNetCore2.Models.UserDetails", b =>
                {
                    b.Property<int>("UserDetailsID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Dateofbirth");

                    b.Property<string>("Email");

                    b.Property<string>("Mobile");

                    b.Property<string>("Name");

                    b.Property<string>("Position");

                    b.Property<string>("Surname");

                    b.HasKey("UserDetailsID");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("CvNetCore2.Models.Work", b =>
                {
                    b.Property<int>("WorkID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("UserDetailsID");

                    b.Property<DateTime>("WorkEndDate");

                    b.Property<string>("WorkName");

                    b.Property<string>("WorkPosition");

                    b.Property<DateTime>("WorkStartDate");

                    b.HasKey("WorkID");

                    b.HasIndex("UserDetailsID");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("CvNetCore2.Models.WorkDescription", b =>
                {
                    b.Property<int>("WorkDescriptionID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("WorkDescriptionText");

                    b.Property<int?>("WorkID");

                    b.HasKey("WorkDescriptionID");

                    b.HasIndex("WorkID");

                    b.ToTable("WorkDescription");
                });

            modelBuilder.Entity("CvNetCore2.Models.About", b =>
                {
                    b.HasOne("CvNetCore2.Models.UserDetails")
                        .WithMany("About")
                        .HasForeignKey("UserDetailsID");
                });

            modelBuilder.Entity("CvNetCore2.Models.Courses", b =>
                {
                    b.HasOne("CvNetCore2.Models.UserDetails")
                        .WithMany("EducationTypesList")
                        .HasForeignKey("UserDetailsID");
                });

            modelBuilder.Entity("CvNetCore2.Models.Hobby", b =>
                {
                    b.HasOne("CvNetCore2.Models.UserDetails")
                        .WithMany("Hobbies")
                        .HasForeignKey("UserDetailsID");
                });

            modelBuilder.Entity("CvNetCore2.Models.Language", b =>
                {
                    b.HasOne("CvNetCore2.Models.UserDetails")
                        .WithMany("Languages")
                        .HasForeignKey("UserDetailsID");
                });

            modelBuilder.Entity("CvNetCore2.Models.Skills", b =>
                {
                    b.HasOne("CvNetCore2.Models.UserDetails")
                        .WithMany("Skills")
                        .HasForeignKey("UserDetailsID");
                });

            modelBuilder.Entity("CvNetCore2.Models.UserAdress", b =>
                {
                    b.HasOne("CvNetCore2.Models.UserDetails")
                        .WithMany("UserAdresses")
                        .HasForeignKey("UserDetailsID");
                });

            modelBuilder.Entity("CvNetCore2.Models.Work", b =>
                {
                    b.HasOne("CvNetCore2.Models.UserDetails")
                        .WithMany("Work")
                        .HasForeignKey("UserDetailsID");
                });

            modelBuilder.Entity("CvNetCore2.Models.WorkDescription", b =>
                {
                    b.HasOne("CvNetCore2.Models.Work", "Work")
                        .WithMany("WorkDescriptions")
                        .HasForeignKey("WorkID");
                });
#pragma warning restore 612, 618
        }
    }
}
